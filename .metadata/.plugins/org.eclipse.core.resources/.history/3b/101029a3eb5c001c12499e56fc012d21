package com.sasmita.unittesting.unittesting.business;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.spy;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.sasmita.unittesting.unittesting.data.ItemRepository;
import com.sasmita.unittesting.unittesting.data.SomeDataService;
import com.sasmita.unittesting.unittesting.model.Item;

@ExtendWith(MockitoExtension.class)
class ItemBusinessServiceTest {
	
	@InjectMocks
	ItemBusinessService itemBusinessServiceMock;
	
	@Mock
	ItemRepository repositoryMock;
	

	@Test
	public void retrieveAllItems_basic() {
		when(repositoryMock.findAll()).thenReturn(List.of(new Item(2,"Item2",10,20),new Item(3,"Item3",20,20)));
		
	}
	
	@Test
	public void calculateSum_empty() {
		when(dataServiceMock.retrieveAllData()).thenReturn(new int[] {});
		assertEquals(0, businessImpl.calculateSum());
	}
	
	@Test
	public void calculateSum_one_value() {
		when(dataServiceMock.retrieveAllData()).thenReturn(new int[] {10});
		assertEquals(10, businessImpl.calculateSum());
	}
	
	@Test
	public void spying() {
		ArrayList arrayListSpy = spy(ArrayList.class);
		arrayListSpy.add("Test0");
		System.out.println(arrayListSpy.get(0));
		System.out.println(arrayListSpy.size());
		arrayListSpy.add("Test1");
		arrayListSpy.add("Test2");
		System.out.println(arrayListSpy.size());
		when(arrayListSpy.size()).thenReturn(5);
		System.out.println(arrayListSpy.size());
		verify(arrayListSpy).add("Test2");
		
		
	}

}
